# Modules and Functions: Part 2 (#11)

## 도입부

> 엘릭서 모듈과 함수에 대해 자세히 알아봅시다. 중요한 주제이므로 다뤄야 합니다.

이 주제의 1부에서는 모듈, 함수 그리고 그것을 호출하는 방법에 대해 소개했습니다. 엘릭서의 함수에 관해 이야기할 내용이 많으니 계속 이어 나가겠습니다.

## 디폴트 매개변수 값

엘릭서 함수 매개변수는 각 매개변수 뒤에 `\\`를 사용하여 기본값을 지정할 수 있습니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
def do_something(item, count \\ 1)
```

따라서 위 함수에서 함수를 호출할 때 `count` 매개변수를 지정하지 않으면 `count` 매개변수는 기본값 1이 됩니다. 즉 `do_something("Bob")`을 호출하면 `count`는 기본값 1이 되고 `do_something("Bob", 4)`를 호출하면 `count`는 4의 값을 가지게 됩니다.

엘릭서는 기본값을 가질 때 실제로 여러 함수를 정의합니다. 이 경우 `do_something/1`과 `do_something/2`를 생성합니다. 애리티가 1인 함수는 기본값을 전달하여 애리티가 2인 함수를 호출합니다.

매개변수 기본값에 대해 배울 때 찾은 정보는 이것뿐이었기 때문에 기본값이 자바스크립트나 C#과 어떻게 다른지 알아보기 시작했습니다.

자바스크립트에서 모든 매개변수는 선택 사항입니다. 매개변수에 기본값을 지정하는 경우(ES6 이상)와 호출자가 기본값을 지정하지 않은 경우 해당 매개변수에 기본값이 할당됩니다. 그렇지 않은 경우 해당 매개변수는 `undefined`를 가져옵니다.

다음 자바스크립트 함수를 살펴보겠습니다.

```javascript
function do_something(a, b = 1, c, d) {
  return [a, b, c, d];
}
```

`do_something("Bob")`을 호출하면 `["Bob", 1, undefined, undefined]`이 반환됩니다. 기본값도 없고 호출자가 값을 제공하지 않은 매개변수는 기본값이 `undefined`로 설정됩니다.

반면에 C#에서는 기본값이 있는 모든 매개변수는 맨 끝에 있어야 합니다. C#에서 기본값이 있는 옵셔널한 매개변수는 필수 매개변수(기본값이 없는 매개변수)보다 앞에 올 수 없습니다.

따라서 다음 예제에서는 컴파일 오류가 발생합니다.

```cs
public List<int> DoSomething(int a, int b = 1, int c, int d)
{
	return new List<int> {a, b, c, d};
}
```

기본값을 끝으로 이동시키면 코드가 컴파일될 수 있습니다.

```cs
public List<int> DoSomething(int a, int b, int c, int d = 1)
{
	return new List<int> {a, b, c, d};
}
```
