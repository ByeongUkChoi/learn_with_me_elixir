# Diving into Elixir (#5)

## 도입부

이제 드디어 엘릭서에 대한 이야기를 끝내고 실제로 사용할 때입니다. 간단한 것이긴 하지만 오늘 우리는 실제로 엘릭서 코드를 작성해 볼 것입니다. 시작해봅시다!

## IEx

우리가 언어를 배우기 위해 사용할 첫 도구는 IEx입니다. 이것은 엘릭서의 대화형 프로그래밍 쉘입니다. 저는 IEx가 "**I**nteractive **E**li**x**ir"의 줄임말이라고 생각합니다. 이 환경에서는 엘릭서의 구문과 표현식을 즉시 평가하고 사용자에게 즉각적인 피드백을 줍니다. 자바스크립트나 비슷한 도구가 있는 다른 언어에 익숙한 사람들은 이것을 REPL(**R**ead-**E**valuate-**P**rint-**L**oop)로 알고 있을 것입니다.

이 환상적인 도구는 엘릭서를 배우는 것뿐만 아니라 실제 코드에서 사용하기 전에 대화형 환경에서 엘릭서 코드를 실행해 볼 수 있도록 해줍니다. 어떤 엘릭서 코드던지 이 환경에 올릴 수 있고 함수를 호출하면 어떤 일이 일어나는지 볼 수도 있습니다. 디버깅 기능에는 어떤 제한이 있다고 들었지만, 그 기능을 사용할 정도로 발전하려면 시간이 걸릴 것 같습니다.

## Digression 시간

만약 다른 많은 언어의 REPL(혹은 REPL과 유사한 환경)을 보려면 [repl.it](https://replit.com/)를 방문하십시오. 자바스크립트(브라우저), 자바스크립트(Node.js), 파이썬, 루비, 클로저, C#, 자바 등의 언어를 위한 대화형 환경이 있습니다. 확실하게 확인하진 않았지만 C++ 환경도 있습니다. C++는 대부분의 정적 타입 언어처럼 인터프리터가 아닌 컴파일이 되는 경향이 있기 때문에 REPL과 유사한 것이 없습니다.

[Repl.it](https://replit.com/)은 루비 온 레일즈, 리액트, 익스프레스, 제스트와 같은 몇몇 프레임워크를 위한 환경도 갖추고 있습니다. 코드를 작성하고 코드 조각을 만들고 또 링크로 공유할 수 있습니다. 저도 사용하곤 했습니다. 아쉽게도 엘릭서는 아직 없습니다. 꾸준히 언어가 추가되었기 때문에(자바스크립트로만 시작했습니다) 언젠가 엘릭서가 들어가 있기를 바랍니다.

커맨드 라인에서 "iex"라고 입력하여 IEx를 실행할 수 있으며, 엘릭서가 잘 설치되었다면 엘릭서 대화형 환경을 사용할 수 있습니다.

```shell
chipmunk:lwmelixir Kevin$ iex
Erlang/OTP 21 [erts-10.0.8] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe] [dtrace]

Interactive Elixir (1.7.3) - press Ctrl+C to exit (type h() ENTER for help)
iex> 
```

엘릭서 구문과 표현식을 입력할 수 있고 그것들이 평가된 결과를 볼 수 있습니다. 곧 같이해 볼 것입니다. 이 환경을 종료하려면 Ctrl+C를 두 번 누르면 됩니다. 종료하는 방법이 약간 어색하지만, 그것이 일반적인 방법입니다.
