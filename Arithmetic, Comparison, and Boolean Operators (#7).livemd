# Arithmetic, Comparison, and Boolean Operators (#7)

## 도입부

> 엘릭서의 산술, 비교, 부울 연산자를 살펴봅니다.

이번에는 프로그래밍 언어를 사용하기 위한 필수 연산자에 대해 배울 것입니다. 많은 언어에서 비슷한 연산자를 배웠기 때문에, 새로운 언어를 배울 때 이 부분은 필수지만 지루한 것 같습니다. 다행히도 여기에는 어려움이나 독특한 것들이 적습니다. 엘릭서만의 몇 가지 독특한 특징들도 있지만, 대부분 이 연산자들은 제가 사용했던 다른 언어들과 비슷합니다.

## 산술 연산자

산술 연산자는 기본적인 수학 연산자입니다.

덧셈, 뺄셈, 곱셈, 나눗셈(`+`, `-`, `*`, `/`)이 있습니다. 이 연산자들은 자바스크립트, C# 혹은 제가 사용한 대부분 언어와 같습니다. 다른 수학적 연산자는 없습니다. 자바스크립트와 C#에서 많이 쓰이는 증감 연산자도 없습니다. 다른 수학 연산은 모두 함수를 통해 수행해야 합니다.

IEx에서 몇 가지 예제를 살펴보겠습니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> 6 + 3
9
iex> 6 - 3
3
iex> 6 * 3
18
iex> 6 / 3
2.0
```

연산 순서는 제가 본 다른 프로그래밍 언어와 같습니다. 자바스트립트나 C#처럼 괄호를 사용하면 연산 순서를 재정의하거나 그룹화를 하여 연산을 읽기 쉽게 할 수 있습니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> 4 + 3 * 5
19
iex> (4 + 3) * 5
35
```

엘릭서에서 나눗셈 연산자(/)를 사용하는 나눗셈은 피연산자가 정수든 부동 소수이든 상관없이 항상 부동 소수가 됩니다. 그래서 5 / 2 는 2.5이고, 8 / 2 는 4.0입니다. 자바스트립트는 비슷하게 동작하지만, 자바스크립트는 단일 숫자 타입을 가지고 있습니다. C#은 이에 해당하지 않습니다. C#에서 두 정수를 나눈 결과는 정수가 됩니다. 엘릭서에서 정수 나눗셈을 하려면 `div` 함수를 통해 정수 나눗셈을 할 수 있습니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> 5 / 2
2.5
iex> div(5, 2)
2
iex> 8 / 2
4.0
iex> div(8, 2)
4
```

엘릭서에는 자바스트립트나 C#처럼 모듈로 연산자가 없습니다. `rem` 함수를 사용하여 같은 작업을 수행할 수 있습니다.

아래는 C#이나 자바스크립트의 `5 % 2` 와 `28 % 10` 에 해당합니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> rem(5, 2)
1
iex> rem(28, 10)
8
```

`rem/2` 함수와 다른 언어의 일반적인 모듈로 연산은 한 가지 차이점이 있습니다. 결과가 0이 아닌 한 결과의 부호는 첫 번째 인자의 부호와 같습니다.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> rem(-10, 10)
0
iex> rem(-10, 12)
-10
iex> rem(10, 12)
10
iex> rem(-100, 12)
-4
```

## 비교 연산자

비교 연산자도 C#과 자바스크립트의 연산자와 매우 유사하지만, 몇 가지 차이점이 있습니다.

### 동등성

자바스크립트와 마찬가지로 엘릭서는 이중 등호(`==`)와 삼중 등호(`===`) 비교 연산자가 있습니다. 자바스크립트처럼 삼중 등호가 이중 등호보다 엄격하지만, 자바스크립트와는 다르게 엄격함의 차이가 작습니다.

삼중 등호 연산자(`===`)는 비교 대상인 두 항목의 유형이 같은지와 유형이 같다면 정확하게 같은 값인지 테스트합니다. 몇 가지 예를 살펴보겠습니다.
