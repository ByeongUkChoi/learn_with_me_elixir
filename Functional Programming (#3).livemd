# Functional Programming (#3)

## 도입부

엘릭서가 함수형 언어이기 때문에, 함수형 프로그래밍의 동작에 대해 익숙해지는 것이 좋습니다. 이전에 자바스크립트와 C#의 기능을 함수형으로 사용한 적은 있지만, 함수형 언어는 이번이 처음입니다. 그래서 저는 여기에 제가 아는 것들을 쓰겠지만 함수형 프로그래밍에는 그보다 훨씬 많은 것이 있을 것입니다.

저는 여러분이 엘릭서를 더 잘 이해하도록 제 관점에서 함수형 프로그래밍의 본질에 대한 최소한의 이해를 시켜드리고 싶습니다. 저는 우리가 진행하면서 함수형 프로그래밍의 본질에 대해 더 많이 배울 것이라고 확신합니다.

## 데이터 vs 함수

객체 지향 언어에서 데이터는 일반적으로 그것을 작동하는 함수와 결합되어 있습니다. 함수형 언어에서는 데이터와 함수는 엄격하게 분리되어 있습니다. 함수는 자체적으로 동작하지만, 관련된 함수들은 종종 모듈로 그룹화됩니다. 그리고 함수는 파라미터로 데이터를 받고 호출자에게 데이터를 반환합니다. 함수는 데이터를 변환하는 것으로 볼 수 있습니다.

## 복잡한 사이드 이펙트

사이드 이펙트란 어떤 함수가 그 함수 밖의 다른 부분에 영향을 미치는 것을 말합니다. 사이드 이펙트가 있는 함수는 전달된 것이 아닌 공유 데이터를 변경하는 것이며, 객체 지향 코드에서는 이것이 일반적입니다. 또한 사이드 이펙트가 있는 함수는 입력 데이터 가져오기, 출력 데이터 내보내기, 네트워크로 데이터 전송하기, 화면에 그리기 등의 환경에 영향을 끼칠 수 있습니다. 이것들은 모두 함수의 경계를 넘어선 효과들입니다.
